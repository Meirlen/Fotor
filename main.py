from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
import os
import time
import pickle
from chromedriver_py import binary_path  # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º—É ChromeDriver

# üîπ –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞
FOTOR_EMAIL = "zmeirlen@gmail.com"
FOTOR_PASSWORD = "Alihan91alijan!"
COOKIES_FILE_PATH = "fotor_cookies.pkl"

def save_cookies(driver, path):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç cookies –≤ —Ñ–∞–π–ª."""
    with open(path, 'wb') as file:
        pickle.dump(driver.get_cookies(), file)
    print("‚úÖ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

def load_cookies(driver, path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç cookies –∏–∑ —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç."""
    if os.path.exists(path):
        with open(path, 'rb') as file:
            cookies = pickle.load(file)
            for cookie in cookies:
                driver.add_cookie(cookie)
        print("‚úÖ Cookies –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
    else:
        print("‚ö† Cookies –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")

def is_logged_in(driver):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É. –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ 'Log in' –µ—Å—Ç—å - –∑–Ω–∞—á–∏—Ç, –Ω–µ –≤–æ—à–ª–∏."""
    try:
        WebDriverWait(driver, 5).until(
            EC.presence_of_element_located((By.CLASS_NAME, "login-header-button"))
        )
        print("‚ùå Cookies —É—Å—Ç–∞—Ä–µ–ª–∏ –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")
        return False
    except:
        print("‚úÖ Cookies –∞–∫—Ç—É–∞–ª—å–Ω—ã, –≤—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
        return True

def login_to_fotor(driver):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Ö–æ–¥ –≤ Fotor, –µ—Å–ª–∏ cookies –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã."""
    driver.get("https://www.fotor.com")

    # üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º cookies –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    load_cookies(driver, COOKIES_FILE_PATH)
    driver.refresh()
    time.sleep(5)

    # üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç—É–∞–ª—å–Ω—ã –ª–∏ cookies
    if is_logged_in(driver):
        return  # –ï—Å–ª–∏ —É–∂–µ –≤–æ—à–ª–∏, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

    # üîπ –ï—Å–ª–∏ cookies —É—Å—Ç–∞—Ä–µ–ª–∏, –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–æ–≤—ã–π –≤—Ö–æ–¥
    print("üîπ –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥...")

    try:
        # üîπ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "Log in"
        login_button = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.CLASS_NAME, "login-header-button"))
        )
        login_button.click()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'Log in' –Ω–∞–∂–∞—Ç–∞.")
        time.sleep(3)

        # üîπ –ù–∞–∂–∏–º–∞–µ–º "Continue with Email"
        continue_with_email_button = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.XPATH, "//div[contains(@class, 'info') and contains(text(), 'Continue with Email')]"))
        )
        continue_with_email_button.click()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'Continue with Email' –Ω–∞–∂–∞—Ç–∞.")
        time.sleep(3)

        # üîπ –í–≤–æ–¥–∏–º email
        email_input = WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.ID, "emailWayStepInputEmail"))
        )
        email_input.send_keys(FOTOR_EMAIL)
        print(f"‚úÖ Email '{FOTOR_EMAIL}' –≤–≤–µ–¥–µ–Ω.")

        # üîπ –ù–∞–∂–∏–º–∞–µ–º "Continue"
        continue_button = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.CLASS_NAME, "button_reset_css.email_way_bottom_row_next"))
        )
        continue_button.click()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'Continue' –Ω–∞–∂–∞—Ç–∞.")
        time.sleep(3)

        # üîπ –í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å
        password_input = WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.ID, "emailWayStepInputPassword"))
        )
        password_input.send_keys(FOTOR_PASSWORD)
        print("‚úÖ –ü–∞—Ä–æ–ª—å –≤–≤–µ–¥–µ–Ω.")

        # üîπ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "Log in"
        login_submit_button = WebDriverWait(driver, 15).until(
            EC.element_to_be_clickable((By.CLASS_NAME, "button_reset_css.email_way_bottom_row_next"))
        )
        login_submit_button.click()
        print("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω.")

        time.sleep(10)  # –ñ–¥–µ–º –≤—Ö–æ–¥

        # üîπ –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
        save_cookies(driver, COOKIES_FILE_PATH)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")

def swap_faces_and_download(image1_path, image2_path, download_dir):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≤—ã–ø–æ–ª–Ω—è–µ—Ç Face Swap –∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç."""

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome
    chrome_options = webdriver.ChromeOptions()
    prefs = {
        "download.default_directory": download_dir,
        "download.prompt_for_download": False,
        "directory_upgrade": True,
        "safebrowsing.enabled": True
    }
    chrome_options.add_experimental_option("prefs", prefs)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è headless-—Ä–µ–∂–∏–º–∞
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--window-size=1920,1080")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.binary_location = "/usr/bin/google-chrome"

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Service –¥–ª—è ChromeDriver
    service = Service(binary_path)
    driver = webdriver.Chrome(service=service, options=chrome_options)

    try:
        # üîπ –í—Ö–æ–¥ –≤ Fotor
        login_to_fotor(driver)

        # üîπ –ü–µ—Ä–µ—Ö–æ–¥ –∫ Face Swapper
        driver.get("https://www.fotor.com/apps/swapper/")
        print("‚úÖ –û—Ç–∫—Ä—ã—Ç Face Swapper")
        time.sleep(5)

        # üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ñ–æ—Ç–æ
        upload_input = driver.find_element(By.CSS_SELECTOR, "input[type='file']")
        upload_input.send_keys(image1_path)
        print("‚úÖ –ü–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
        time.sleep(10)



        upload_button = driver.find_element(By.CLASS_NAME, "swap_target_upload_button__LlgSz")
        upload_button.click()
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–∞—Ç–∞.")
        time.sleep(2)
        print("‚úÖ –ö–Ω–æ–ø–∫–∞ '+' –Ω–∞–∂–∞—Ç–∞.")

        time.sleep(2)

        # üîπ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        driver.save_screenshot("/app/test_photos/fotor_swapper_debug.png")
        print("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ /app/test_photos/fotor_swapper_debug.png")

        # üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ —Ñ–æ—Ç–æ
        upload_input = driver.find_element(By.CSS_SELECTOR, "input[type='file']")
        upload_input.send_keys(image2_path)
        print("‚úÖ –í—Ç–æ—Ä–æ–µ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")
        time.sleep(10)

        # üîπ –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "Swap Face Now"
        swap_button = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.CSS_SELECTOR, ".generate-button_generate_button__LStMd"))
        )
        swap_button.click()
        print("‚úÖ –ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–º–µ–Ω—ã –ª–∏—Ü.")

        # üîπ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –æ–∫–Ω–∞ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        message_found = False
        start_time = time.time()
        timeout = 300

        while time.time() - start_time < timeout:
            try:
                message_element = WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, ".remove-tip_desc__6RIm1"))
                )
                if "We'll keep your generated images for 24 hours!" in message_element.text:
                    print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ—è–≤–∏–ª–æ—Å—å.")
                    message_found = True
                    break
            except:
                print("üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è...")
                time.sleep(10)

        if message_found:
            confirm_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, ".primary-button_primary_button__-uGVm"))
            )
            confirm_button.click()
            print("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.")
        else:
            print("‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å.")
            return None

        # üîπ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        time.sleep(10)

        # üîπ –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        files = os.listdir(download_dir)
        paths = [os.path.join(download_dir, basename) for basename in files]
        latest_file = max(paths, key=os.path.getctime)
        print(f"‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {latest_file}")

        return latest_file

    finally:
        driver.quit()

# üîπ –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
image1 = "/app/test_photos/book_image.jpg"
image2 = "/app/test_photos/alihan.png"
download_directory = "/app/test_photos"



downloaded_file = swap_faces_and_download(image1, image2, download_directory)
print(f"üì• –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {downloaded_file}")
